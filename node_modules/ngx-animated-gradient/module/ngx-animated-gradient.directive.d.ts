import { ElementRef, OnInit, OnDestroy, Renderer2 } from '@angular/core';
/**
 * A `RGBValue` containers the RGB values for a step in the gradient animation
 */
export declare type RGBValue = [number, number, number];
export declare type RGBTransition = [string, string];
export declare enum InterpolationDirection {
    FORWARD = 0,
    BACKWARD = 1
}
export declare class NgxAnimatedGradientDirective implements OnInit, OnDestroy {
    private renderer;
    private el;
    /**
     * A list of RGB Value tuples used to define the gradient
     */
    colors: RGBValue[];
    /**
     * The tick speed for calling the update of the gradient
     */
    tickSpeed: number;
    /**
     * The color indices, these indicate where in the color table to load from
     * The order is as follows:
     *   Current left, Next left, Current right, Next right
     */
    colorIndices: number[];
    /**
     * The multiplier for the gradient speed
     */
    gradientSpeed: number;
    private direction;
    private step$;
    private componentDestroyed$;
    private gradientRunning$;
    constructor(renderer: Renderer2, el: ElementRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private createColor;
    private getNewColour;
    private generateColour;
    /**
     * Start the directive gradient animation
     */
    start(): void;
    /**
     * Stop the directive gradient animation
     */
    stop(): void;
    /**
     * Set a new palette for the animation
     */
    newPalette(): void;
    /**
     * Update the gradient animation
     */
    render(renderValue: RGBTransition, step: number): void;
}
