import MeshGradient from "mesh-gradient.js";
import React, { useEffect, useRef } from "react";
import { generateUUID } from "../utils/generate";
export var GradientBackground = function (props) {
    var ref = useRef(null);
    var canvasId = "gradientCanvas".concat(generateUUID());
    useEffect(function () {
        var _a, _b;
        var interval;
        if (ref.current) {
            var gradient_1 = new MeshGradient();
            gradient_1.initGradient("#".concat(canvasId), props.colors);
            gradient_1.setCanvasSize((_a = ref.current) === null || _a === void 0 ? void 0 : _a.clientWidth, (_b = ref.current) === null || _b === void 0 ? void 0 : _b.clientHeight);
            var i_1 = Math.random() * 1000;
            interval = setInterval(function () {
                i_1 += 0.004;
                gradient_1 === null || gradient_1 === void 0 ? void 0 : gradient_1.changePosition(i_1);
            });
            return function () { return clearInterval(interval); };
        }
        return function () { return clearInterval(interval); };
    }, [props.colors]);
    return (React.createElement("div", { ref: ref, className: props.className, style: { overflow: "hidden" } },
        React.createElement("canvas", { id: canvasId, style: { filter: !props.lowPerformance ? "blur(5rem)" : undefined } })));
};
//# sourceMappingURL=gradientBackground.js.map