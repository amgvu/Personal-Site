"use strict";
exports.__esModule = true;
exports.GradientBackground = void 0;
var tslib_1 = require("tslib");
var mesh_gradient_js_1 = tslib_1.__importDefault(require("mesh-gradient.js"));
var react_1 = tslib_1.__importStar(require("react"));
var generate_1 = require("../utils/generate");
var GradientBackground = function (props) {
    var ref = (0, react_1.useRef)(null);
    var canvasId = "gradientCanvas".concat((0, generate_1.generateUUID)());
    (0, react_1.useEffect)(function () {
        var _a, _b;
        var interval;
        if (ref.current) {
            var gradient_1 = new mesh_gradient_js_1["default"]();
            gradient_1.initGradient("#".concat(canvasId), props.colors);
            gradient_1.setCanvasSize((_a = ref.current) === null || _a === void 0 ? void 0 : _a.clientWidth, (_b = ref.current) === null || _b === void 0 ? void 0 : _b.clientHeight);
            var i_1 = Math.random() * 1000;
            interval = setInterval(function () {
                i_1 += 0.004;
                gradient_1 === null || gradient_1 === void 0 ? void 0 : gradient_1.changePosition(i_1);
            });
            return function () { return clearInterval(interval); };
        }
        return function () { return clearInterval(interval); };
    }, [props.colors]);
    return (react_1["default"].createElement("div", { ref: ref, className: props.className, style: { overflow: "hidden" } },
        react_1["default"].createElement("canvas", { id: canvasId, style: { filter: !props.lowPerformance ? "blur(5rem)" : undefined } })));
};
exports.GradientBackground = GradientBackground;
//# sourceMappingURL=gradientBackground.js.map